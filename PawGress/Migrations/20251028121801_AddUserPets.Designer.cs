// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PawGress.Data;

#nullable disable

namespace PawGress.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251028121801_AddUserPets")]
    partial class AddUserPets
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("PawGress.Models.Challenge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPreMade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Challenges");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Completed = false,
                            IsPreMade = true,
                            Name = "Starter Challenge"
                        });
                });

            modelBuilder.Entity("PawGress.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Health")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rarity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("XP")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 0,
                            Health = 100,
                            Level = 1,
                            Name = "Fluffy",
                            Rarity = "Standard",
                            Type = "",
                            XP = 0
                        },
                        new
                        {
                            Id = 2,
                            Age = 0,
                            Health = 100,
                            Level = 1,
                            Name = "Sparky",
                            Rarity = "Standard",
                            Type = "",
                            XP = 0
                        },
                        new
                        {
                            Id = 3,
                            Age = 0,
                            Health = 100,
                            Level = 1,
                            Name = "Shadow",
                            Rarity = "Rare",
                            Type = "",
                            XP = 0
                        },
                        new
                        {
                            Id = 4,
                            Age = 0,
                            Health = 100,
                            Level = 1,
                            Name = "Aurora",
                            Rarity = "Mythical",
                            Type = "",
                            XP = 0
                        });
                });

            modelBuilder.Entity("PawGress.Models.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ChallengeId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHabit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("XP")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChallengeId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Upper",
                            Completed = false,
                            IsHabit = false,
                            Name = "10 Push-ups",
                            UserId = 0,
                            XP = 10
                        },
                        new
                        {
                            Id = 2,
                            Category = "Core",
                            Completed = false,
                            IsHabit = false,
                            Name = "20 Sit-ups",
                            UserId = 0,
                            XP = 15
                        },
                        new
                        {
                            Id = 3,
                            Category = "Lower",
                            Completed = false,
                            IsHabit = false,
                            Name = "15 Squats",
                            UserId = 0,
                            XP = 10
                        },
                        new
                        {
                            Id = 4,
                            Category = "Core",
                            Completed = false,
                            IsHabit = true,
                            Name = "Drink Water",
                            UserId = 0,
                            XP = 5
                        },
                        new
                        {
                            Id = 5,
                            Category = "Upper",
                            Completed = false,
                            IsHabit = true,
                            Name = "Stretch",
                            UserId = 0,
                            XP = 5
                        });
                });

            modelBuilder.Entity("PawGress.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "password",
                            Username = "testuser"
                        });
                });

            modelBuilder.Entity("PawGress.Models.UserChallenge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChallengeId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChallengeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserChallenges");
                });

            modelBuilder.Entity("PawGress.Models.UserPet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPets");
                });

            modelBuilder.Entity("PawGress.Models.UserTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TaskItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TaskItemId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTasks");
                });

            modelBuilder.Entity("PawGress.Models.TaskItem", b =>
                {
                    b.HasOne("PawGress.Models.Challenge", null)
                        .WithMany("Tasks")
                        .HasForeignKey("ChallengeId");
                });

            modelBuilder.Entity("PawGress.Models.UserChallenge", b =>
                {
                    b.HasOne("PawGress.Models.Challenge", "Challenge")
                        .WithMany()
                        .HasForeignKey("ChallengeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawGress.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Challenge");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PawGress.Models.UserPet", b =>
                {
                    b.HasOne("PawGress.Models.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawGress.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PawGress.Models.UserTask", b =>
                {
                    b.HasOne("PawGress.Models.TaskItem", "TaskItem")
                        .WithMany()
                        .HasForeignKey("TaskItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawGress.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PawGress.Models.Challenge", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
